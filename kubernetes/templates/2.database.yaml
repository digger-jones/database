apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.name }}
  replicas: 1
  volumeClaimTemplates:
    - metadata:
        name: storage
        namespace: {{ .Values.namespace }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.database_size }}
        selector:
          matchLabels:
            volume-name: {{ .Values.namespace }}-{{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.namespace }}
        role: {{ .Values.name }}
    spec:
      nodeSelector:
        mailserver: "true"
      containers:
        - name: {{ .Values.name }}
          image: mariadb:latest
          imagePullPolicy: Always
          readinessProbe:
            tcpSocket:
              port: {{ .Values.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: {{ .Values.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
          env:
            - name: "MYSQL_HOSTNAME"
              valueFrom:
                configMapKeyRef:
                  name: database-common
                  key: DATABASE_HOSTNAME
            - name: "MYSQL_PORT"
              valueFrom:
                configMapKeyRef:
                  name: database-common
                  key: DATABASE_PORT
            - name: "MYSQL_ROOT_PASSWORD"
              valueFrom:
                configMapKeyRef:
                  name: database-root
                  key: DATABASE_PASSWORD
            - name: "MYSQL_DATABASE"
              valueFrom:
                configMapKeyRef:
                  name: database-common
                  key: DATABASE_NAME
            - name: "MYSQL_ENCODING"
              valueFrom:
                configMapKeyRef:
                  name: database-common
                  key: DATABASE_ENCODING
          volumeMounts:
            - name: storage
              mountPath: /var/lib/mysql
          ports:
          - name: {{ .Values.name }}
            containerPort: {{ .Values.port }}
            protocol: TCP
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.namespace }}
    role: {{ .Values.name }}
  ports:
  - name: {{ .Values.name }}
    port: {{ .Values.port }}
    targetPort: {{ .Values.port }}
